{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Ai chatbot-interview\\\\ai-interview-chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const [score, setScore] = useState(null);\n  const [feedbackText, setFeedbackText] = useState('');\n  const handleNext = async () => {\n    try {\n      // 1. Ask a new question from GPT\n      const askRes = await ask();\n      const question = askRes.data.question;\n      setCurrentQuestion(question);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: question\n      }]);\n    } catch (err) {\n      console.error('Error asking question:', err);\n    }\n  };\n  const handleSubmit = async () => {\n    if (!userInput.trim()) return;\n    setMessages(prev => [...prev, {\n      from: 'user',\n      text: userInput\n    }]);\n    try {\n      // 2. Evaluate the user's answer\n      const evalRes = await evaluate(userInput);\n      const userScore = evalRes.data.score;\n      setScore(userScore);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: `Score: ${userScore}/10`\n      }]);\n\n      // 3. Get feedback based on score\n      const fbRes = await feedback(userScore);\n      const fb = fbRes.data.feedback;\n      setFeedbackText(fb);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: fb\n      }]);\n    } catch (err) {\n      console.error('Error evaluating answer:', err);\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-xl mx-auto border rounded-lg shadow-md bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 overflow-y-auto mb-4 border p-2 rounded bg-gray-50\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 ${msg.from === 'bot' ? 'text-blue-700' : 'text-green-700'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.from === 'bot' ? 'Bot:' : 'You:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 p-2 border rounded\",\n        placeholder: \"Type your answer...\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"bg-gray-600 text-white px-4 py-2 rounded\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"b9dfZqU3TvghNjfpd2ZhFbzgvxg=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","ask","evaluate","feedback","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","userInput","setUserInput","currentQuestion","setCurrentQuestion","score","setScore","feedbackText","setFeedbackText","handleNext","askRes","question","data","prev","from","text","err","console","error","handleSubmit","trim","evalRes","userScore","fbRes","fb","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Ai chatbot-interview/ai-interview-chatbot/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [currentQuestion, setCurrentQuestion] = useState('');\r\n  const [score, setScore] = useState(null);\r\n  const [feedbackText, setFeedbackText] = useState('');\r\n\r\n  const handleNext = async () => {\r\n    try {\r\n      // 1. Ask a new question from GPT\r\n      const askRes = await ask();\r\n      const question = askRes.data.question;\r\n      setCurrentQuestion(question);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: question }]);\r\n    } catch (err) {\r\n      console.error('Error asking question:', err);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    setMessages((prev) => [...prev, { from: 'user', text: userInput }]);\r\n\r\n    try {\r\n      // 2. Evaluate the user's answer\r\n      const evalRes = await evaluate(userInput);\r\n      const userScore = evalRes.data.score;\r\n      setScore(userScore);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { from: 'bot', text: `Score: ${userScore}/10` },\r\n      ]);\r\n\r\n      // 3. Get feedback based on score\r\n      const fbRes = await feedback(userScore);\r\n      const fb = fbRes.data.feedback;\r\n      setFeedbackText(fb);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: fb }]);\r\n    } catch (err) {\r\n      console.error('Error evaluating answer:', err);\r\n    }\r\n\r\n    setUserInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-xl mx-auto border rounded-lg shadow-md bg-white\">\r\n      <div className=\"h-64 overflow-y-auto mb-4 border p-2 rounded bg-gray-50\">\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`mb-2 ${msg.from === 'bot' ? 'text-blue-700' : 'text-green-700'}`}>\r\n            <strong>{msg.from === 'bot' ? 'Bot:' : 'You:'}</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"flex gap-2\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"flex-1 p-2 border rounded\"\r\n          placeholder=\"Type your answer...\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n        />\r\n        <button onClick={handleSubmit} className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n          Submit\r\n        </button>\r\n        <button onClick={handleNext} className=\"bg-gray-600 text-white px-4 py-2 rounded\">\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF;MACA,MAAMC,MAAM,GAAG,MAAMlB,GAAG,CAAC,CAAC;MAC1B,MAAMmB,QAAQ,GAAGD,MAAM,CAACE,IAAI,CAACD,QAAQ;MACrCP,kBAAkB,CAACO,QAAQ,CAAC;MAC5BX,WAAW,CAAEa,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAEJ;MAAS,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAClB,SAAS,CAACmB,IAAI,CAAC,CAAC,EAAE;IAEvBpB,WAAW,CAAEa,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEd;IAAU,CAAC,CAAC,CAAC;IAEnE,IAAI;MACF;MACA,MAAMoB,OAAO,GAAG,MAAM5B,QAAQ,CAACQ,SAAS,CAAC;MACzC,MAAMqB,SAAS,GAAGD,OAAO,CAACT,IAAI,CAACP,KAAK;MACpCC,QAAQ,CAACgB,SAAS,CAAC;MACnBtB,WAAW,CAAEa,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;QAAEC,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAE,UAAUO,SAAS;MAAM,CAAC,CAChD,CAAC;;MAEF;MACA,MAAMC,KAAK,GAAG,MAAM7B,QAAQ,CAAC4B,SAAS,CAAC;MACvC,MAAME,EAAE,GAAGD,KAAK,CAACX,IAAI,CAAClB,QAAQ;MAC9Bc,eAAe,CAACgB,EAAE,CAAC;MACnBxB,WAAW,CAAEa,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAES;MAAG,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOR,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAChD;IAEAd,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,oBACEN,OAAA;IAAK6B,SAAS,EAAC,2DAA2D;IAAAC,QAAA,gBACxE9B,OAAA;MAAK6B,SAAS,EAAC,yDAAyD;MAAAC,QAAA,EACrE3B,QAAQ,CAAC4B,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBjC,OAAA;QAAe6B,SAAS,EAAE,QAAQG,GAAG,CAACd,IAAI,KAAK,KAAK,GAAG,eAAe,GAAG,gBAAgB,EAAG;QAAAY,QAAA,gBAC1F9B,OAAA;UAAA8B,QAAA,EAASE,GAAG,CAACd,IAAI,KAAK,KAAK,GAAG,MAAM,GAAG;QAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,KAAC,EAACL,GAAG,CAACb,IAAI;MAAA,GADzDc,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrC,OAAA;MAAK6B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB9B,OAAA;QACEsC,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,2BAA2B;QACrCU,WAAW,EAAC,qBAAqB;QACjCC,KAAK,EAAEnC,SAAU;QACjBoC,QAAQ,EAAGC,CAAC,IAAKpC,YAAY,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFrC,OAAA;QAAQ4C,OAAO,EAAErB,YAAa;QAACM,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAEpF;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrC,OAAA;QAAQ4C,OAAO,EAAE/B,UAAW;QAACgB,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAElF;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CAxEID,OAAO;AAAA4C,EAAA,GAAP5C,OAAO;AA0Eb,eAAeA,OAAO;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}