{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Ai chatbot-interview\\\\ai-interview-chatbot\\\\frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport { useNavigate } from 'react-router-dom'; // ‚úÖ For redirect\n\n// ‚úÖ Firebase Config\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBTkwcfkXg9FnzaJGKS5iuHiNvkHKLHywA\",\n  authDomain: \"chatbot-authentication-ef411.firebaseapp.com\",\n  projectId: \"chatbot-authentication-ef411\",\n  storageBucket: \"chatbot-authentication-ef411.appspot.com\",\n  messagingSenderId: \"964739824417\",\n  appId: \"1:964739824417:web:45519389e74972b9a1dc60\",\n  measurementId: \"G-VWF0XY3JCR\"\n};\n\n// üî• Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst auth = getAuth(app);\nconst Login = () => {\n  _s();\n  const [isSigningIn, setIsSigningIn] = useState(false);\n  const navigate = useNavigate();\n  const speakWelcomeMessage = () => {\n    const msg = new SpeechSynthesisUtterance(\"Hi, what do you want to prepare for?\");\n    msg.lang = \"en-US\";\n    window.speechSynthesis.speak(msg);\n  };\n  const handleGoogleLogin = async () => {\n    if (isSigningIn) return;\n    setIsSigningIn(true);\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      console.log('‚úÖ Logged in as:', user.displayName);\n      alert(`Welcome, ${user.displayName}!`);\n      speakWelcomeMessage(); // ‚úÖ Speak the welcome message\n      setTimeout(() => navigate('/interview'), 1500); // ‚úÖ Redirect after 1.5s\n    } catch (error) {\n      console.error('‚ùå Google sign-in failed:', error.message);\n      alert('Login failed: ' + error.message);\n    } finally {\n      setIsSigningIn(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      disabled: isSigningIn,\n      className: `px-6 py-3 rounded text-white ${isSigningIn ? 'bg-gray-500 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}`,\n      children: isSigningIn ? 'üîÑ Signing in...' : 'üîê Sign in with Google'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"+RnK6LTvwMsHeNE0Houj6Aht3uY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","getAuth","GoogleAuthProvider","signInWithPopup","initializeApp","getAnalytics","useNavigate","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","Login","_s","isSigningIn","setIsSigningIn","navigate","speakWelcomeMessage","msg","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","handleGoogleLogin","provider","result","user","console","log","displayName","alert","setTimeout","error","message","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Ai chatbot-interview/ai-interview-chatbot/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAnalytics } from 'firebase/analytics';\r\nimport { useNavigate } from 'react-router-dom'; // ‚úÖ For redirect\r\n\r\n// ‚úÖ Firebase Config\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBTkwcfkXg9FnzaJGKS5iuHiNvkHKLHywA\",\r\n  authDomain: \"chatbot-authentication-ef411.firebaseapp.com\",\r\n  projectId: \"chatbot-authentication-ef411\",\r\n  storageBucket: \"chatbot-authentication-ef411.appspot.com\",\r\n  messagingSenderId: \"964739824417\",\r\n  appId: \"1:964739824417:web:45519389e74972b9a1dc60\",\r\n  measurementId: \"G-VWF0XY3JCR\"\r\n};\r\n\r\n// üî• Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\n\r\nconst Login = () => {\r\n  const [isSigningIn, setIsSigningIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const speakWelcomeMessage = () => {\r\n    const msg = new SpeechSynthesisUtterance(\"Hi, what do you want to prepare for?\");\r\n    msg.lang = \"en-US\";\r\n    window.speechSynthesis.speak(msg);\r\n  };\r\n\r\n  const handleGoogleLogin = async () => {\r\n    if (isSigningIn) return;\r\n    setIsSigningIn(true);\r\n\r\n    const provider = new GoogleAuthProvider();\r\n\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const user = result.user;\r\n\r\n      console.log('‚úÖ Logged in as:', user.displayName);\r\n      alert(`Welcome, ${user.displayName}!`);\r\n\r\n      speakWelcomeMessage(); // ‚úÖ Speak the welcome message\r\n      setTimeout(() => navigate('/interview'), 1500); // ‚úÖ Redirect after 1.5s\r\n    } catch (error) {\r\n      console.error('‚ùå Google sign-in failed:', error.message);\r\n      alert('Login failed: ' + error.message);\r\n    } finally {\r\n      setIsSigningIn(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <button\r\n        onClick={handleGoogleLogin}\r\n        disabled={isSigningIn}\r\n        className={`px-6 py-3 rounded text-white ${\r\n          isSigningIn ? 'bg-gray-500 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'\r\n        }`}\r\n      >\r\n        {isSigningIn ? 'üîÑ Signing in...' : 'üîê Sign in with Google'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}