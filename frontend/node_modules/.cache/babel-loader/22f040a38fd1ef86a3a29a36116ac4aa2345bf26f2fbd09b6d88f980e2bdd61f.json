{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Ai chatbot-interview\\\\ai-interview-chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QuestionCard from './QuestionCard';\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  setSessionData,\n  setScore,\n  setFeedback\n}) => {\n  _s();\n  const [question, setQuestion] = useState('Tell me about yourself.');\n  const [userAnswer, setUserAnswer] = useState('');\n  const [history, setHistory] = useState([]);\n  const handleNext = async () => {\n    const response = await interviewAPI.ask(question, userAnswer);\n    const evaluation = await interviewAPI.evaluate(userAnswer);\n    const newEntry = {\n      question,\n      answer: userAnswer,\n      feedback: evaluation.feedback,\n      score: evaluation.score\n    };\n    setHistory([...history, newEntry]);\n    setSessionData(prev => [...prev, newEntry]);\n    setScore(evaluation.score);\n    setFeedback(evaluation.feedback);\n    const newQuestion = await interviewAPI.getNextQuestion();\n    setQuestion(newQuestion);\n    setUserAnswer('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-6\",\n    children: /*#__PURE__*/_jsxDEV(QuestionCard, {\n      question: question,\n      answer: userAnswer,\n      setAnswer: setUserAnswer,\n      onNext: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"dIoa2oRefZlTsIAFfibKfYmVAEw=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","QuestionCard","ask","evaluate","feedback","jsxDEV","_jsxDEV","ChatBox","setSessionData","setScore","setFeedback","_s","question","setQuestion","userAnswer","setUserAnswer","history","setHistory","handleNext","response","interviewAPI","evaluation","newEntry","answer","score","prev","newQuestion","getNextQuestion","className","children","setAnswer","onNext","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Ai chatbot-interview/ai-interview-chatbot/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QuestionCard from './QuestionCard';\r\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\r\nconst ChatBox = ({ setSessionData, setScore, setFeedback }) => {\r\n  const [question, setQuestion] = useState('Tell me about yourself.');\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const handleNext = async () => {\r\n    const response = await interviewAPI.ask(question, userAnswer);\r\n    const evaluation = await interviewAPI.evaluate(userAnswer);\r\n\r\n    const newEntry = {\r\n      question,\r\n      answer: userAnswer,\r\n      feedback: evaluation.feedback,\r\n      score: evaluation.score,\r\n    };\r\n\r\n    setHistory([...history, newEntry]);\r\n    setSessionData(prev => [...prev, newEntry]);\r\n    setScore(evaluation.score);\r\n    setFeedback(evaluation.feedback);\r\n\r\n    const newQuestion = await interviewAPI.getNextQuestion();\r\n    setQuestion(newQuestion);\r\n    setUserAnswer('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <QuestionCard\r\n        question={question}\r\n        answer={userAnswer}\r\n        setAnswer={setUserAnswer}\r\n        onNext={handleNext}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9D,MAAMC,OAAO,GAAGA,CAAC;EAAEC,cAAc;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,yBAAyB,CAAC;EACnE,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,YAAY,CAAClB,GAAG,CAACU,QAAQ,EAAEE,UAAU,CAAC;IAC7D,MAAMO,UAAU,GAAG,MAAMD,YAAY,CAACjB,QAAQ,CAACW,UAAU,CAAC;IAE1D,MAAMQ,QAAQ,GAAG;MACfV,QAAQ;MACRW,MAAM,EAAET,UAAU;MAClBV,QAAQ,EAAEiB,UAAU,CAACjB,QAAQ;MAC7BoB,KAAK,EAAEH,UAAU,CAACG;IACpB,CAAC;IAEDP,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEM,QAAQ,CAAC,CAAC;IAClCd,cAAc,CAACiB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEH,QAAQ,CAAC,CAAC;IAC3Cb,QAAQ,CAACY,UAAU,CAACG,KAAK,CAAC;IAC1Bd,WAAW,CAACW,UAAU,CAACjB,QAAQ,CAAC;IAEhC,MAAMsB,WAAW,GAAG,MAAMN,YAAY,CAACO,eAAe,CAAC,CAAC;IACxDd,WAAW,CAACa,WAAW,CAAC;IACxBX,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACET,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBvB,OAAA,CAACL,YAAY;MACXW,QAAQ,EAAEA,QAAS;MACnBW,MAAM,EAAET,UAAW;MACnBgB,SAAS,EAAEf,aAAc;MACzBgB,MAAM,EAAEb;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCIJ,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}