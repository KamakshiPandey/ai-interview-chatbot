{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Ai chatbot-interview\\\\ai-interview-chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  messages,\n  setMessages,\n  totalQuestions,\n  setTotalQuestions,\n  totalScore,\n  setTotalScore\n}) => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const [score, setScore] = useState(null);\n  const [feedbackText, setFeedbackText] = useState('');\n  const [listening, setListening] = useState(false);\n  const [isBotTyping, setIsBotTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleNext = async () => {\n    try {\n      setIsBotTyping(true);\n      const askRes = await ask();\n      const question = askRes.data.question;\n      setCurrentQuestion(question);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: question\n      }]);\n    } catch (err) {\n      console.error('Error asking question:', err);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: '❌ Failed to fetch question.'\n      }]);\n    } finally {\n      setIsBotTyping(false);\n    }\n  };\n  const handleSubmit = async () => {\n    if (!userInput.trim()) return;\n    setMessages(prev => [...prev, {\n      from: 'user',\n      text: userInput\n    }]);\n    try {\n      setIsBotTyping(true);\n      const evalRes = await evaluate(userInput);\n      const userScore = evalRes.data.score;\n      const explanation = evalRes.data.explanation;\n      setScore(userScore);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: `✅ Score: ${userScore}/10`\n      }, {\n        from: 'bot',\n        text: explanation\n      }]);\n      setTotalQuestions(prev => prev + 1);\n      setTotalScore(prev => prev + userScore);\n      const fbRes = await feedback(userInput);\n      const fb = fbRes.data.feedback;\n      setFeedbackText(fb);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: `📝 Feedback: ${fb}`\n      }]);\n    } catch (err) {\n      console.error('Error evaluating answer:', err);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: '❌ Failed to evaluate answer.'\n      }]);\n    } finally {\n      setUserInput('');\n      setIsBotTyping(false);\n    }\n  };\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert('🎤 Speech recognition is not supported in this browser.');\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.onstart = () => setListening(true);\n    recognition.onend = () => setListening(false);\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setUserInput(transcript);\n    };\n    recognition.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      setListening(false);\n    };\n    recognition.start();\n  };\n  const addEmoji = emoji => {\n    setUserInput(prev => prev + ' ' + emoji);\n  };\n  const downloadTranscript = type => {\n    const filename = `interview_transcript.${type}`;\n    let content = '';\n    if (type === 'json') {\n      content = JSON.stringify(messages, null, 2);\n    } else {\n      content = messages.map(msg => `${msg.from === 'bot' ? 'Bot' : 'You'}: ${msg.text}`).join('\\n');\n    }\n    const blob = new Blob([content], {\n      type: type === 'json' ? 'application/json' : 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-xl mx-auto border rounded-lg shadow-md bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-sm text-gray-700\",\n      children: [\"\\uD83D\\uDCC8 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Stats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 12\n      }, this), \" \", totalQuestions, \" answered | Average Score:\", ' ', totalQuestions > 0 ? (totalScore / totalQuestions).toFixed(1) : 'N/A', \"/10\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 overflow-y-auto mb-4 border p-2 rounded bg-gray-50\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 p-2 rounded-lg max-w-[85%] ${msg.from === 'bot' ? 'bg-blue-100 text-blue-800' : 'bg-green-100 text-green-800 self-end'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.from === 'bot' ? '🤖 Bot:' : '🧑 You:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)), isBotTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-blue-500 italic mb-2\",\n        children: \"\\uD83E\\uDD16 Bot is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-1 mb-2\",\n      children: ['👍', '😊', '😕', '🔥', '🎯'].map(emoji => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addEmoji(emoji),\n        className: \"text-xl hover:scale-125 transition-transform\",\n        children: emoji\n      }, emoji, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 items-center mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 p-2 border rounded\",\n        placeholder: \"Type or speak your answer...\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSubmit()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startListening,\n        title: \"Click to speak\",\n        className: `px-3 py-2 rounded-full text-xl ${listening ? 'bg-red-600 text-white animate-pulse' : 'bg-green-600 text-white hover:bg-green-700'}`,\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 justify-end mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadTranscript('txt'),\n        className: \"bg-purple-600 text-white px-3 py-2 rounded hover:bg-purple-700\",\n        children: \"\\uD83D\\uDCDD Download TXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadTranscript('json'),\n        className: \"bg-yellow-600 text-white px-3 py-2 rounded hover:bg-yellow-700\",\n        children: \"\\uD83D\\uDCC4 Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"Ub8c5YePu+iO66k6eNbn3wS8p4s=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ask","evaluate","feedback","jsxDEV","_jsxDEV","ChatBox","messages","setMessages","totalQuestions","setTotalQuestions","totalScore","setTotalScore","_s","userInput","setUserInput","currentQuestion","setCurrentQuestion","score","setScore","feedbackText","setFeedbackText","listening","setListening","isBotTyping","setIsBotTyping","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleNext","askRes","question","data","prev","from","text","err","console","error","handleSubmit","trim","evalRes","userScore","explanation","fbRes","fb","startListening","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","lang","interimResults","onstart","onend","onresult","event","transcript","results","onerror","start","addEmoji","emoji","downloadTranscript","type","filename","content","JSON","stringify","map","msg","join","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","idx","ref","onClick","placeholder","value","onChange","e","target","onKeyDown","key","title","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Ai chatbot-interview/ai-interview-chatbot/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\r\n\r\nconst ChatBox = ({\r\n  messages,\r\n  setMessages,\r\n  totalQuestions,\r\n  setTotalQuestions,\r\n  totalScore,\r\n  setTotalScore,\r\n}) => {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [currentQuestion, setCurrentQuestion] = useState('');\r\n  const [score, setScore] = useState(null);\r\n  const [feedbackText, setFeedbackText] = useState('');\r\n  const [listening, setListening] = useState(false);\r\n  const [isBotTyping, setIsBotTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleNext = async () => {\r\n    try {\r\n      setIsBotTyping(true);\r\n      const askRes = await ask();\r\n      const question = askRes.data.question;\r\n      setCurrentQuestion(question);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: question }]);\r\n    } catch (err) {\r\n      console.error('Error asking question:', err);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: '❌ Failed to fetch question.' }]);\r\n    } finally {\r\n      setIsBotTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    setMessages((prev) => [...prev, { from: 'user', text: userInput }]);\r\n\r\n    try {\r\n      setIsBotTyping(true);\r\n      const evalRes = await evaluate(userInput);\r\n      const userScore = evalRes.data.score;\r\n      const explanation = evalRes.data.explanation;\r\n\r\n      setScore(userScore);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { from: 'bot', text: `✅ Score: ${userScore}/10` },\r\n        { from: 'bot', text: explanation },\r\n      ]);\r\n\r\n      setTotalQuestions((prev) => prev + 1);\r\n      setTotalScore((prev) => prev + userScore);\r\n\r\n      const fbRes = await feedback(userInput);\r\n      const fb = fbRes.data.feedback;\r\n      setFeedbackText(fb);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: `📝 Feedback: ${fb}` }]);\r\n    } catch (err) {\r\n      console.error('Error evaluating answer:', err);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: '❌ Failed to evaluate answer.' }]);\r\n    } finally {\r\n      setUserInput('');\r\n      setIsBotTyping(false);\r\n    }\r\n  };\r\n\r\n  const startListening = () => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert('🎤 Speech recognition is not supported in this browser.');\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.interimResults = false;\r\n\r\n    recognition.onstart = () => setListening(true);\r\n    recognition.onend = () => setListening(false);\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setUserInput(transcript);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error('Speech recognition error:', event.error);\r\n      setListening(false);\r\n    };\r\n\r\n    recognition.start();\r\n  };\r\n\r\n  const addEmoji = (emoji) => {\r\n    setUserInput((prev) => prev + ' ' + emoji);\r\n  };\r\n\r\n  const downloadTranscript = (type) => {\r\n    const filename = `interview_transcript.${type}`;\r\n    let content = '';\r\n\r\n    if (type === 'json') {\r\n      content = JSON.stringify(messages, null, 2);\r\n    } else {\r\n      content = messages.map((msg) => `${msg.from === 'bot' ? 'Bot' : 'You'}: ${msg.text}`).join('\\n');\r\n    }\r\n\r\n    const blob = new Blob([content], {\r\n      type: type === 'json' ? 'application/json' : 'text/plain',\r\n    });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-xl mx-auto border rounded-lg shadow-md bg-white\">\r\n      {/* 📈 Stats Dashboard */}\r\n      <div className=\"mb-3 text-sm text-gray-700\">\r\n        📈 <strong>Stats:</strong> {totalQuestions} answered | Average Score:{' '}\r\n        {totalQuestions > 0 ? (totalScore / totalQuestions).toFixed(1) : 'N/A'}/10\r\n      </div>\r\n\r\n      {/* 💬 Chat Window */}\r\n      <div className=\"h-64 overflow-y-auto mb-4 border p-2 rounded bg-gray-50\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`mb-2 p-2 rounded-lg max-w-[85%] ${\r\n              msg.from === 'bot'\r\n                ? 'bg-blue-100 text-blue-800'\r\n                : 'bg-green-100 text-green-800 self-end'\r\n            }`}\r\n          >\r\n            <strong>{msg.from === 'bot' ? '🤖 Bot:' : '🧑 You:'}</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n        {isBotTyping && <div className=\"text-blue-500 italic mb-2\">🤖 Bot is typing...</div>}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* 😊 Emojis */}\r\n      <div className=\"flex flex-wrap gap-1 mb-2\">\r\n        {['👍', '😊', '😕', '🔥', '🎯'].map((emoji) => (\r\n          <button\r\n            key={emoji}\r\n            onClick={() => addEmoji(emoji)}\r\n            className=\"text-xl hover:scale-125 transition-transform\"\r\n          >\r\n            {emoji}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* 🎤 Input & Buttons */}\r\n      <div className=\"flex gap-2 items-center mb-2\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"flex-1 p-2 border rounded\"\r\n          placeholder=\"Type or speak your answer...\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === 'Enter' && handleSubmit()}\r\n        />\r\n\r\n        <button\r\n          onClick={startListening}\r\n          title=\"Click to speak\"\r\n          className={`px-3 py-2 rounded-full text-xl ${\r\n            listening\r\n              ? 'bg-red-600 text-white animate-pulse'\r\n              : 'bg-green-600 text-white hover:bg-green-700'\r\n          }`}\r\n        >\r\n          🎤\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Submit\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleNext}\r\n          className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n      {/* 📥 Download Buttons */}\r\n      <div className=\"flex gap-2 justify-end mt-2\">\r\n        <button\r\n          onClick={() => downloadTranscript('txt')}\r\n          className=\"bg-purple-600 text-white px-3 py-2 rounded hover:bg-purple-700\"\r\n        >\r\n          📝 Download TXT\r\n        </button>\r\n        <button\r\n          onClick={() => downloadTranscript('json')}\r\n          className=\"bg-yellow-600 text-white px-3 py-2 rounded hover:bg-yellow-700\"\r\n        >\r\n          📄 Download JSON\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}