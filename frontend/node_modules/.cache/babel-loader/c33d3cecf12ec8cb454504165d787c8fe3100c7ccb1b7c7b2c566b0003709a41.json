{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Ai chatbot-interview\\\\ai-interview-chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const [score, setScore] = useState(null);\n  const [feedbackText, setFeedbackText] = useState('');\n  const [listening, setListening] = useState(false);\n  const [isBotTyping, setIsBotTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleNext = async () => {\n    try {\n      setIsBotTyping(true);\n      const askRes = await ask();\n      const question = askRes.data.question;\n      setCurrentQuestion(question);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: question\n      }]);\n    } catch (err) {\n      console.error('Error asking question:', err);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: '‚ùå Failed to fetch question.'\n      }]);\n    } finally {\n      setIsBotTyping(false);\n    }\n  };\n  const handleSubmit = async () => {\n    if (!userInput.trim()) return;\n    setMessages(prev => [...prev, {\n      from: 'user',\n      text: userInput\n    }]);\n    try {\n      setIsBotTyping(true);\n\n      // Call evaluate (score + explanation)\n      const evalRes = await evaluate(userInput);\n      const userScore = evalRes.data.score;\n      const explanation = evalRes.data.explanation;\n      setScore(userScore);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: `‚úÖ Score: ${userScore}/10`\n      }, {\n        from: 'bot',\n        text: explanation\n      }]);\n\n      // Feedback (optional if not needed, you can skip this)\n      const fbRes = await feedback(userInput);\n      const fb = fbRes.data.feedback;\n      setFeedbackText(fb);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: `üìù Feedback: ${fb}`\n      }]);\n    } catch (err) {\n      console.error('Error evaluating answer:', err);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: '‚ùå Failed to evaluate answer.'\n      }]);\n    } finally {\n      setUserInput('');\n      setIsBotTyping(false);\n    }\n  };\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert('üé§ Speech recognition is not supported in this browser.');\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.onstart = () => setListening(true);\n    recognition.onend = () => setListening(false);\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setUserInput(transcript);\n    };\n    recognition.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      setListening(false);\n    };\n    recognition.start();\n  };\n  const addEmoji = emoji => {\n    setUserInput(prev => prev + ' ' + emoji);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-xl mx-auto border rounded-lg shadow-md bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 overflow-y-auto mb-4 border p-2 rounded bg-gray-50\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 p-2 rounded-lg max-w-[85%] ${msg.from === 'bot' ? 'bg-blue-100 text-blue-800' : 'bg-green-100 text-green-800 self-end'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.from === 'bot' ? 'ü§ñ Bot:' : 'üßë You:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)), isBotTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-blue-500 italic mb-2\",\n        children: \"\\uD83E\\uDD16 Bot is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-1 mb-2\",\n      children: ['üëç', 'üòä', 'üòï', 'üî•', 'üéØ'].map(emoji => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addEmoji(emoji),\n        className: \"text-xl hover:scale-125 transition-transform\",\n        children: emoji\n      }, emoji, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 p-2 border rounded\",\n        placeholder: \"Type or speak your answer...\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSubmit()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startListening,\n        title: \"Click to speak\",\n        className: `px-3 py-2 rounded-full text-xl ${listening ? 'bg-red-600 text-white animate-pulse' : 'bg-green-600 text-white hover:bg-green-700'}`,\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"9Mg4GL6TbNUmZuk70HW4liA5niU=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ask","evaluate","feedback","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","userInput","setUserInput","currentQuestion","setCurrentQuestion","score","setScore","feedbackText","setFeedbackText","listening","setListening","isBotTyping","setIsBotTyping","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleNext","askRes","question","data","prev","from","text","err","console","error","handleSubmit","trim","evalRes","userScore","explanation","fbRes","fb","startListening","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","lang","interimResults","onstart","onend","onresult","event","transcript","results","onerror","start","addEmoji","emoji","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","type","placeholder","value","onChange","e","target","onKeyDown","key","title","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Ai chatbot-interview/ai-interview-chatbot/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [currentQuestion, setCurrentQuestion] = useState('');\r\n  const [score, setScore] = useState(null);\r\n  const [feedbackText, setFeedbackText] = useState('');\r\n  const [listening, setListening] = useState(false);\r\n  const [isBotTyping, setIsBotTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleNext = async () => {\r\n    try {\r\n      setIsBotTyping(true);\r\n      const askRes = await ask();\r\n      const question = askRes.data.question;\r\n      setCurrentQuestion(question);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: question }]);\r\n    } catch (err) {\r\n      console.error('Error asking question:', err);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: '‚ùå Failed to fetch question.' }]);\r\n    } finally {\r\n      setIsBotTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    setMessages((prev) => [...prev, { from: 'user', text: userInput }]);\r\n\r\n    try {\r\n      setIsBotTyping(true);\r\n\r\n      // Call evaluate (score + explanation)\r\n      const evalRes = await evaluate(userInput);\r\n      const userScore = evalRes.data.score;\r\n      const explanation = evalRes.data.explanation;\r\n\r\n      setScore(userScore);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { from: 'bot', text: `‚úÖ Score: ${userScore}/10` },\r\n        { from: 'bot', text: explanation }\r\n      ]);\r\n\r\n      // Feedback (optional if not needed, you can skip this)\r\n      const fbRes = await feedback(userInput);\r\n      const fb = fbRes.data.feedback;\r\n      setFeedbackText(fb);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: `üìù Feedback: ${fb}` }]);\r\n    } catch (err) {\r\n      console.error('Error evaluating answer:', err);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: '‚ùå Failed to evaluate answer.' }]);\r\n    } finally {\r\n      setUserInput('');\r\n      setIsBotTyping(false);\r\n    }\r\n  };\r\n\r\n  const startListening = () => {\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert('üé§ Speech recognition is not supported in this browser.');\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.interimResults = false;\r\n\r\n    recognition.onstart = () => setListening(true);\r\n    recognition.onend = () => setListening(false);\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setUserInput(transcript);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error('Speech recognition error:', event.error);\r\n      setListening(false);\r\n    };\r\n\r\n    recognition.start();\r\n  };\r\n\r\n  const addEmoji = (emoji) => {\r\n    setUserInput((prev) => prev + ' ' + emoji);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-xl mx-auto border rounded-lg shadow-md bg-white\">\r\n      <div className=\"h-64 overflow-y-auto mb-4 border p-2 rounded bg-gray-50\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`mb-2 p-2 rounded-lg max-w-[85%] ${\r\n              msg.from === 'bot' ? 'bg-blue-100 text-blue-800' : 'bg-green-100 text-green-800 self-end'\r\n            }`}\r\n          >\r\n            <strong>{msg.from === 'bot' ? 'ü§ñ Bot:' : 'üßë You:'}</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n        {isBotTyping && <div className=\"text-blue-500 italic mb-2\">ü§ñ Bot is typing...</div>}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"flex flex-wrap gap-1 mb-2\">\r\n        {['üëç', 'üòä', 'üòï', 'üî•', 'üéØ'].map((emoji) => (\r\n          <button\r\n            key={emoji}\r\n            onClick={() => addEmoji(emoji)}\r\n            className=\"text-xl hover:scale-125 transition-transform\"\r\n          >\r\n            {emoji}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"flex gap-2 items-center\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"flex-1 p-2 border rounded\"\r\n          placeholder=\"Type or speak your answer...\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === 'Enter' && handleSubmit()}\r\n        />\r\n\r\n        <button\r\n          onClick={startListening}\r\n          title=\"Click to speak\"\r\n          className={`px-3 py-2 rounded-full text-xl ${\r\n            listening\r\n              ? 'bg-red-600 text-white animate-pulse'\r\n              : 'bg-green-600 text-white hover:bg-green-700'\r\n          }`}\r\n        >\r\n          üé§\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Submit\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleNext}\r\n          className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}