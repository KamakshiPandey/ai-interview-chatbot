{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Ai chatbot-interview\\\\ai-interview-chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  const [score, setScore] = useState(null);\n  const [feedbackText, setFeedbackText] = useState('');\n  const [listening, setListening] = useState(false);\n  const handleNext = async () => {\n    try {\n      const askRes = await ask();\n      const question = askRes.data.question;\n      setCurrentQuestion(question);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: question\n      }]);\n    } catch (err) {\n      console.error('Error asking question:', err);\n    }\n  };\n  const handleSubmit = async () => {\n    if (!userInput.trim()) return;\n    setMessages(prev => [...prev, {\n      from: 'user',\n      text: userInput\n    }]);\n    try {\n      const evalRes = await evaluate(userInput);\n      const userScore = evalRes.data.score;\n      setScore(userScore);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: `Score: ${userScore}/10`\n      }]);\n      const fbRes = await feedback(userScore);\n      const fb = fbRes.data.feedback;\n      setFeedbackText(fb);\n      setMessages(prev => [...prev, {\n        from: 'bot',\n        text: fb\n      }]);\n    } catch (err) {\n      console.error('Error evaluating answer:', err);\n    }\n    setUserInput('');\n  };\n  const startListening = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert('Speech recognition is not supported in this browser.');\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.onstart = () => setListening(true);\n    recognition.onend = () => setListening(false);\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setUserInput(transcript);\n    };\n    recognition.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      setListening(false);\n    };\n    recognition.start();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-xl mx-auto border rounded-lg shadow-md bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 overflow-y-auto mb-4 border p-2 rounded bg-gray-50\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 ${msg.from === 'bot' ? 'text-blue-700' : 'text-green-700'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.from === 'bot' ? 'Bot:' : 'You:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 p-2 border rounded\",\n        placeholder: \"Type or speak your answer...\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startListening,\n        title: \"Click to speak\",\n        className: `px-3 py-2 rounded-full text-xl ${listening ? 'bg-red-600 text-white animate-pulse' : 'bg-green-600 text-white hover:bg-green-700'}`,\n        children: \"\\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        className: \"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"AzX4pMsyv5mAdt5hRrbaiNkK18Q=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","ask","evaluate","feedback","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","userInput","setUserInput","currentQuestion","setCurrentQuestion","score","setScore","feedbackText","setFeedbackText","listening","setListening","handleNext","askRes","question","data","prev","from","text","err","console","error","handleSubmit","trim","evalRes","userScore","fbRes","fb","startListening","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","lang","interimResults","onstart","onend","onresult","event","transcript","results","onerror","start","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Ai chatbot-interview/ai-interview-chatbot/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ask, evaluate, feedback } from '../api/interviewAPI';\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [currentQuestion, setCurrentQuestion] = useState('');\r\n  const [score, setScore] = useState(null);\r\n  const [feedbackText, setFeedbackText] = useState('');\r\n  const [listening, setListening] = useState(false);\r\n\r\n  const handleNext = async () => {\r\n    try {\r\n      const askRes = await ask();\r\n      const question = askRes.data.question;\r\n      setCurrentQuestion(question);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: question }]);\r\n    } catch (err) {\r\n      console.error('Error asking question:', err);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    setMessages((prev) => [...prev, { from: 'user', text: userInput }]);\r\n\r\n    try {\r\n      const evalRes = await evaluate(userInput);\r\n      const userScore = evalRes.data.score;\r\n      setScore(userScore);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { from: 'bot', text: `Score: ${userScore}/10` },\r\n      ]);\r\n\r\n      const fbRes = await feedback(userScore);\r\n      const fb = fbRes.data.feedback;\r\n      setFeedbackText(fb);\r\n      setMessages((prev) => [...prev, { from: 'bot', text: fb }]);\r\n    } catch (err) {\r\n      console.error('Error evaluating answer:', err);\r\n    }\r\n\r\n    setUserInput('');\r\n  };\r\n\r\n  const startListening = () => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert('Speech recognition is not supported in this browser.');\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.interimResults = false;\r\n\r\n    recognition.onstart = () => setListening(true);\r\n    recognition.onend = () => setListening(false);\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setUserInput(transcript);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error('Speech recognition error:', event.error);\r\n      setListening(false);\r\n    };\r\n\r\n    recognition.start();\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-xl mx-auto border rounded-lg shadow-md bg-white\">\r\n      <div className=\"h-64 overflow-y-auto mb-4 border p-2 rounded bg-gray-50\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`mb-2 ${msg.from === 'bot' ? 'text-blue-700' : 'text-green-700'}`}\r\n          >\r\n            <strong>{msg.from === 'bot' ? 'Bot:' : 'You:'}</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"flex gap-2 items-center\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"flex-1 p-2 border rounded\"\r\n          placeholder=\"Type or speak your answer...\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n        />\r\n\r\n        <button\r\n          onClick={startListening}\r\n          title=\"Click to speak\"\r\n          className={`px-3 py-2 rounded-full text-xl ${\r\n            listening\r\n              ? 'bg-red-600 text-white animate-pulse'\r\n              : 'bg-green-600 text-white hover:bg-green-700'\r\n          }`}\r\n        >\r\n          ðŸŽ¤\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Submit\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleNext}\r\n          className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}